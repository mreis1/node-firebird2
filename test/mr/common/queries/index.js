exports.DROPTABLE = `EXECUTE BLOCK AS BEGIN 
IF ( NOT EXISTS(SELECT 1 FROM RDB$PROCEDURES WHERE RDB$PROCEDURE_NAME = 'DROPTABLE')) THEN
BEGIN
    EXECUTE STATEMENT 'CREATE PROCEDURE DROPTABLE (
    TABLE_NAME VARCHAR(31),
    DROPIT DOM_BOOLEAN
) AS
    DECLARE VARIABLE CONSTRAINT_NAME VARCHAR(31);
BEGIN
  -- DROP ALL FOREIGN KEYS
  FOR SELECT RC.RDB$CONSTRAINT_NAME
      FROM RDB$RELATION_CONSTRAINTS RC
      WHERE RC.RDB$RELATION_NAME = :TABLE_NAME AND RC.RDB$CONSTRAINT_TYPE = ''FOREIGN KEY''
      INTO :CONSTRAINT_NAME
  DO
  BEGIN
    EXECUTE STATEMENT ''ALTER TABLE '' || :TABLE_NAME || '' DROP CONSTRAINT '' || :CONSTRAINT_NAME;
  END

  -- DROP ALL PRIMARY KEYS
  FOR SELECT RC.RDB$CONSTRAINT_NAME
      FROM RDB$RELATION_CONSTRAINTS RC
      WHERE RC.RDB$RELATION_NAME = :TABLE_NAME AND RC.RDB$CONSTRAINT_TYPE = ''PRIMARY KEY''
      INTO :CONSTRAINT_NAME
  DO
  BEGIN
    EXECUTE STATEMENT ''ALTER TABLE '' || :TABLE_NAME || '' DROP CONSTRAINT '' || :CONSTRAINT_NAME;
  END

   IF (DROPIT = -1) THEN
    IF (EXISTS(SELECT FIRST 1 1 FROM RDB$RELATIONS WHERE RDB$RELATION_NAME = :TABLE_NAME AND RDB$VIEW_BLR IS NULL)) THEN
        EXECUTE STATEMENT ''DROP TABLE ''||:TABLE_NAME||'';'';
END' WITH AUTONOMOUS TRANSACTION;
    END
END`;

exports.F_SQLSTM = `EXECUTE BLOCK AS BEGIN
IF ( NOT EXISTS(SELECT 1 FROM RDB$FUNCTIONS WHERE RDB$FUNCTION_NAME = 'F_SQLSTM')) THEN
BEGIN
    EXECUTE STATEMENT 'CREATE FUNCTION F_SQLSTM (
            SQLSTM DOM_CHAINE_400,
            THROWS DOM_BOOLEAN = 0)
        RETURNS DOM_CLE_EXTERNE_NULL
        AS
        BEGIN
          BEGIN
            EXECUTE STATEMENT :SQLSTM WITH AUTONOMOUS TRANSACTION;
          WHEN ANY DO BEGIN
            IF (THROWS = -1) THEN
               EXCEPTION BAD_REQUEST ''(GDSCODE='' || COALESCE(GDSCODE, ''??'') || '')'';
            ELSE
                RETURN GDSCODE;
            END
          END
        END' WITH AUTONOMOUS TRANSACTION;
    END
END`
